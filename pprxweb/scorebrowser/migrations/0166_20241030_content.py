# Generated by Django 4.2.7 on 2024-10-31 03:15

from django.db import migrations


def forward(apps, schema_editor):
    UnlockGroup = apps.get_model("scorebrowser", "UnlockGroup")
    UnlockEvent = apps.get_model("scorebrowser", "UnlockEvent")
    UnlockTask = apps.get_model("scorebrowser", "UnlockTask")
    ChartUnlock = apps.get_model("scorebrowser", "ChartUnlock")
    Chart = apps.get_model("scorebrowser", "Chart")

    def findCharts(title):
        candidates = Chart.objects.filter(song__title=title)
        if len(candidates) == 0:
            raise Exception("No charts found for {}".format(title))
        return [c for c in candidates if (c.song.title == title)]

    def songUnlock(event, taskName, title, taskOrdering):
        task = UnlockTask.objects.create(event=event, name=taskName, ordering=taskOrdering)
        for chart in findCharts(title):
            ChartUnlock.objects.create(task=task, chart=chart)

    group = UnlockGroup.objects.get(name="Time-limited events")
    tripleTribe = UnlockEvent.objects.create(
        version_id=20,
        group=group,
        name='BEMANI PRO LEAGUE -SEASON 4- Triple Tribe',
        ordering=10,
        amethyst_required=False,
        progressive=True,
    )
    songUnlock(tripleTribe, '700 TB (ハイテックトキオ)', 'ハイテックトキオ', 0)
    songUnlock(tripleTribe, '1400 TS (混乱少女♥そふらんちゃん!!)', '混乱少女♥そふらんちゃん!!', 10)
    songUnlock(tripleTribe, '2100 each (COSMIC V3LOCITY)', 'COSMIC V3LOCITY', 20)

    def findChart(title, difficulty_id):
        candidates = Chart.objects.filter(song__title=title, difficulty_id=difficulty_id)
        for chart in candidates:
            if chart.song.title == title: # 'take me higher' / 'TAKE ME HIGHER' sql collation woes
                return chart
        return None

    def newChallengeChart(title):
        newChallengeChartsEvent = UnlockEvent.objects.filter(name="New Challenge charts (A3)").first()
        newChart = UnlockTask.objects.create(event=newChallengeChartsEvent, name="{} Challenge".format(title), ordering=20)
        chart = findChart(title, 4)
        ChartUnlock.objects.create(task=newChart, chart=chart)
        return chart

    newChallengeChart("Step This Way")


    tripleTribe = UnlockEvent.objects.get(name='BEMANI PRO LEAGUE -SEASON 3- Triple Tribe', ordering=-10)
    tripleTribe.progressive = True
    tripleTribe.name = "BEMANI PRO LEAGUE -SEASON 3- Triple Tribe (Part 2)"
    tripleTribe.save()

    for task in UnlockTask.objects.filter(event=tripleTribe):
        task.name = task.name[9:]
        task.save()



def backward(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('scorebrowser', '0165_triple_tribe_2_fix'),
    ]

    operations = [migrations.RunPython(forward, backward)]