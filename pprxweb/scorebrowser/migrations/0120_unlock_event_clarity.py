# Generated by Django 3.2.16 on 2023-12-31 21:13

from django.db import migrations, models
import django.db.models.deletion


def forward(apps, schema_editor):
    UnlockGroup = apps.get_model("scorebrowser", "UnlockGroup")
    UnlockEvent = apps.get_model("scorebrowser", "UnlockEvent")

    # it was funny while it lasted
    UnlockEvent.objects.get(name="bag Challenge should not exist").delete()
    
    gl = UnlockGroup.objects.create(name="Golden League", ordering=0)
    ct = UnlockGroup.objects.create(name="Course Trial", ordering=10)
    gp = UnlockGroup.objects.create(name="Grand Prix advance play", ordering=20)
    es = UnlockGroup.objects.create(name="Extra Savior", ordering=30)
    tl = UnlockGroup.objects.create(name="Time-limited events", ordering=40)

    gla3 = UnlockEvent.objects.get(name="GOLDEN LEAGUE A3")
    gla3.group = gl
    gla3.save()

    cta3 = UnlockEvent.objects.get(name="[A3] COURSE TRIAL A3")
    cta3.name = "COURSE TRIAL A3"
    cta3.group = ct
    cta3.save()

    gpa3 = UnlockEvent.objects.get(name="GRAND PRIX Advance Play")
    gpa3.group = gp
    gpa3.save()

    gla3 = UnlockEvent.objects.get(name="GOLDEN LEAGUE A3")
    gla3.group = gl
    gla3.save()

    esa3names = [
        "[A3] EXTRA SAVIOR A3",
        "[A3] Enjoy Summer Vacation!",
        "[A3] BEMANI 2021真夏の歌合戦5番勝負 (wave 1)",
        "[A3] BEMANI 2021真夏の歌合戦5番勝負 (wave 2)",
        "[A3] Boo! Trick or treat!",
        "[A3] Crystal clear winter",
        "[A3] 恋せよDDRのバレンタイン＆ホワイトデー2023",
        "[A3] 春を呼ぶ桜の祝祭",
        "[A3] DANCE aROUND × DanceDanceRevolution 2022 natsu no MUSIC CHOICE",
    ]
    for name in esa3names:
        event = UnlockEvent.objects.get(name=name)
        event.group = es
        event.name = event.name[5:]
        event.save()

    eventA3names = [
        "[A3] いちかのごちゃまぜMix UP！",
        "[A3] KONAMI Arcade Championship (2023) Entry Songs",
        "[A3] BEMANI PRO LEAGUE -SEASON 3- Triple Tribe",
        "BABY-LON'S GALAXY",
    ]
    for name in eventA3names:
        event = UnlockEvent.objects.get(name=name)
        event.group = tl
        event.name = event.name.replace("[A3] ", "")
        event.save()

    gla20 = UnlockEvent.objects.get(name="GOLDEN LEAGUE PLUS")
    gla20.group = gl
    gla20.save()

    cta20 = UnlockEvent.objects.get(name="[A20 PLUS] COURSE TRIAL")
    cta20.group = ct
    cta20.name = "COURSE TRIAL"
    cta20.save()

    esa20names = [
        "[A20 PLUS] EXTRA SAVIOR PLUS",
        "[A20 PLUS] バンめし♪ ふるさとグランプリ ROUND 2",
        "[A20 PLUS] バンめし♪ ふるさとグランプリ ROUND 3",
        "[A20 PLUS] Trick and DDR! HAPPY HALLOWEEN!!",
        "[A20 PLUS] Merry Christmas and Happy DDR! 2020",
        "[A20 PLUS] 恋せよDDRのバレンタイン＆ホワイトデー2021",
        "[A20 PLUS] 花咲ケ!DDR SPRING FESTIVAL",
        "[A20 PLUS] OVER 200",
        "[A20 PLUS] 恋せよDDRのバレンタイン＆ホワイトデー2022",
        "[A20 PLUS] DANCERUSH STARDOM × DanceDanceRevolution SUMMER DANCE CAMP 2020",
        "[A20 PLUS] いちかのBEMANI超じゃんけん大会2020",
        "[A20 PLUS] 毎週！いちかの超BEMANIラッシュ2020",
    ]
    for name in esa20names:
        event = UnlockEvent.objects.get(name=name)
        event.group = es
        event.name = event.name.replace("[A20 PLUS] ", "")
        event.save()

    eventA20names = [
        "[A20 PLUS] FLOOR INFECTION",
        "[A20 PLUS] DDR CHALLENGE Carnival PLUS",
        "[A20 PLUS] The 10th KONAMI Arcade Championship Entry Song",
        "[A20 PLUS] BPL応援 楽曲解禁スタンプラリー",
        "[A20 PLUS] BEMANI 2021真夏の歌合戦5番勝負",
    ]
    for name in eventA20names:
        event = UnlockEvent.objects.get(name=name)
        event.group = tl
        event.name = event.name.replace("[A20 PLUS] ", "")
        event.save()


def backward(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('scorebrowser', '0119_auto_20231230_2003'),
    ]

    operations = [
        migrations.CreateModel(
            name='UnlockGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('ordering', models.IntegerField()),
            ],
        ),

        migrations.AddField(
            model_name='unlockevent',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='scorebrowser.unlockgroup'),
        ),

        migrations.RunPython(forward, backward),

        migrations.RemoveField(
            model_name='unlockevent',
            name='completable',
        ),

        migrations.AlterField(
            model_name='unlockevent',
            name='version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scorebrowser.version'),
        ),        
    ]
