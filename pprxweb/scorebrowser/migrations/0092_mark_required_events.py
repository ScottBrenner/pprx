# Generated by Django 3.2.16 on 2023-10-28 01:02

from django.db import migrations


def forward(apps, schema_editor):
    UnlockEvent = apps.get_model("scorebrowser", "UnlockEvent")
    UnlockTask = apps.get_model("scorebrowser", "UnlockTask")
    ChartUnlock = apps.get_model("scorebrowser", "ChartUnlock")

    oldExtraExclusiveEvent = UnlockEvent.objects.create(name="EXTRA EXCLUSIVE A20PLUS", ordering=-10, completable=False)
    oldExtraExclusiveTask = UnlockTask.objects.create(event=oldExtraExclusiveEvent, name="EXTRA EXCLUSIVE A20PLUS", ordering=-10)

    for title in ['Last Card', 'ANTI ANTHEM']:
        unlock = ChartUnlock.objects.get(chart__song__title=title)
        unlock.task = oldExtraExclusiveTask

    vocaloidName = "[A3] BEMANI 2021真夏の歌合戦5番勝負"
    vocaloidWave1 = UnlockEvent.objects.get(name=vocaloidName)
    vocaloidWave1.name = vocaloidName + " (wave 1)"
    vocaloidWave1.save()

    vocaloidWave2 = UnlockEvent.objects.create(name=vocaloidName + " (wave 2)", ordering=vocaloidWave1.ordering + 1, amethyst_required=False)
    for title in ['MA・TSU・RI', 'チュッチュ♪マチュピチュ', '斑咲花', 'DUAL STRIKER']:
        unlock = ChartUnlock.objects.get(chart__song__title=title)
        unlock.task.event = vocaloidWave2
        unlock.task.save()
    bonusTask = UnlockTask.objects.get(name="All of the above, on doubles")
    bonusTask.event = vocaloidWave2
    bonusTask.save()

    for name in [
        'GOLDEN LEAGUE A3',
        'GRAND PRIX Advance Play',
        '[A3] いちかのごちゃまぜMix UP！',
        '[A3] KONAMI Arcade Championship (2023) Entry Songs',
        '[A3] BEMANI PRO LEAGUE -SEASON 3- Triple Tribe',
        '[A3] DANCE aROUND × DanceDanceRevolution 2022 natsu no MUSIC CHOICE',
    ]:
        event = UnlockEvent.objects.get(name=name)
        event.amethyst_required = False
        event.save()


def backward(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('scorebrowser', '0091_unlockevent_amethyst_required'),
    ]

    operations = [
        migrations.RunPython(forward, backward)
    ]
